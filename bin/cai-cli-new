#! /usr/bin/env node

const program = require('commander');
const chalk = require('chalk'); //可以改变控制台输出的颜色
const async = require('async');
const inquirer = require('inquirer');
const API = require('../lib/common/api')
const path = require('path');
const exists = require('fs').existsSync


program
	.usage('选择自己需要的项目')



program
	.on('--help',() => {
		console.log('哈哈')
		console.log(chalk.blue('丽丽'))
	})

program.parse(process.argv)



let questions = [{
	type: 'list',
	name: 'selection',
	message: '请选择你要使用的模板类型',
	choices: [
		new inquirer.Separator('.....'),
		{
			name: 'react - react项目',
			value: 'react-template'
		}
	]
}];

const template = {
	'react-template': []
}

API.template_list(begin)


function begin(tem_data){
    tem_data.forEach(({name,description,git_url}) => {
    	let tem_item = {
    		name: `${name} - ${description}`,
    		value: name,
    		git_url
    	}
    	template[name].push(tem_item)
    	
    })
    choice()
}

function choice(){
	async.waterfall([
		(cb)=>{
          inquirer.prompt(questions).then(function (answers) {
              cb(null, answers.selection)
          }, err => {
          	console.log(err)
          })
        },
        (itemId, cb) => {
        	let choices = template[itemId];
        	let questions = [{
        		type: 'list',
        		name: 'template_name',
        		message: '请选择你要使用的模板',
        		choices
        	}]
        	inquirer.prompt(questions).then(({template_name}) => {
        		let git_url = '';
        		choices.forEach((v,i) => {
        			v.value === template_name && (git_url = v.git_url)
        		})
        		cb(null,git_url,template_name)
        	})	
        },
        (git_url,template_name,cb) => {
        	let promps = [];
        	promps.push({
        		type: 'input',
        		name: 'ProjectName',
        		message: '请输入项目名称',
        		validate: input => {
        			if(!input){
        				return '不能为空'
        			}
        			return true
        		}
        	})
        	inquirer.prompt(promps).then(answers => {
        		console.log(JSON.stringify(answers))
        		let rawName = answers.ProjectName;
        		const to = path.resolve(rawName || '.');
        		if(exists(to)){
        			inquirer.prompt([{
        				type: 'confirm',
        				message: '该名字在当前目录下已存在，是否做覆盖操作？',
        				name: 'ok'
        			}]).then(answers => {
        				if(answers.ok){
        					console.log('哈哈')
        				}
        			})
        		}else{
        			console.log('不适用')
        		}
        	})
        }
		])
}